# Copyright 2020 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# This variant deploys 'receiver' as a manually-scalable Deployment, exposed
# via both an Istio VirtualService and a Kubernetes Service at the respective
# URLs:
#
#  - receiver.<namespace>.svc.cluster.local
#  - receiver-internal.<namespace>.svc.cluster.local
#
# The purpose of this setup is to allow putting Knative's cluster-local-gateway
# under pressure while preventing the receiver to get scaled automatically by
# Knative Serving.

apiVersion: v1
kind: Service
metadata:
  name: receiver
spec:
  type: ExternalName
  externalName: cluster-local-gateway.istio-system.svc.cluster.local
  ports:
  - name: http
    port: 80
    targetPort: 80

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: receiver
spec:
  hosts:
  - receiver # interpreted as receiver.<namespace>.svc.cluster.local
  gateways:
  - knative-serving/cluster-local-gateway
  http:
  - route:
    - destination:
        host: receiver-internal # interpreted as receiver-internal.<namespace>.svc.cluster.local
        port:
          number: 80

---

apiVersion: v1
kind: Service
metadata:
  name: receiver-internal
spec:
  selector:
    app: receiver
  ports:
  - name: &ce cloudevents
    port: 80
    targetPort: *ce

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: &app receiver
spec:
  replicas: 1

  selector:
    matchLabels:
      app: *app

  template:
    metadata:
      labels:
        app: *app

    spec:

      # In production, with n1-standard-2 nodes, the sum of resources requested
      # by all containers can not exceed the values below, considering the
      # system-reserved resources and typical DaemonSets such as kube-proxy and
      # fluentbit:
      #
      #  cpu: 1720m
      #  memory: 5360Mi
      #
      containers:

      - name: receiver
        image: ko://receiver
        ports:
        - name: cloudevents
          containerPort: 8080

        resources:
          requests:
            # We set the CPU request as high as possible to ensure the container
            # receives the highest possible CPU share.
            # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#how-pods-with-resource-limits-are-run
            cpu: 1720m
            memory: 5360Mi
          limits:
            memory: 5360Mi
