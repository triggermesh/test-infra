# Copyright 2020 TriggerMesh Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: &app thrpt-receiver
  namespace: perf-thrpt-receiver
spec:
  selector:
    app: *app
  ports:
  - name: &ce cloudevents
    port: 80
    targetPort: *ce

---

apiVersion: v1
kind: Pod
metadata:
  name: &app thrpt-receiver
  namespace: perf-thrpt-receiver
  labels:
    app: *app
spec:
  restartPolicy: Never
  serviceAccountName: *app

  # In production, with n1-standard-2 nodes, the sum of resources requested by
  # both containers can not exceed the values below, considering the
  # system-reserved resources and typical DaemonSets such as kube-proxy and
  # fluentbit:
  #
  #  cpu: 1720m
  #  memory: 5360Mi
  #
  containers:

  - name: receiver
    image: ko://thrpt-receiver
    args:
      # An accurate estimate can prevent expensive memory allocations due to
      # growing the event store on the fly. In doubt, higher is always better.
    - -estimated-total-events=1000
    env:
      # Disable Go's garbage collector to prevent GC pauses from influencing results.
    - name: GOGC
      value: 'off'
    ports:
    - name: cloudevents
      containerPort: 8080
    - name: pprof
      containerPort: 8008
    resources:
      requests:
        # We set the CPU request as high as possible to ensure the container
        # receives the highest possible CPU share.
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#how-pods-with-resource-limits-are-run
        cpu: 1720m
        memory: 5360Mi
      limits:
        memory: 5360Mi
    volumeMounts:
    - name: &mako config-mako
      mountPath: /etc/config-mako
    terminationMessagePolicy: FallbackToLogsOnError

  - name: mako-stub
    image: ko://knative.dev/pkg/test/mako/stub-sidecar
    ports:
    - name: quickstore
      containerPort: 9813
    # Do not reserve resources for the Mako sidecar, since it remains idle for
    # the duration of the benchmark and only processes data at the very end.
    resources: {}
    volumeMounts:
      - name: *mako
        mountPath: /etc/config-mako
    terminationMessagePolicy: FallbackToLogsOnError

  volumes:
  - name: *mako
    configMap:
      name: *mako
